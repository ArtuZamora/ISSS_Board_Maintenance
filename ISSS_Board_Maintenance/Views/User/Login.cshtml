@model ISSS_Board_Maintenance.Models.employee_user


@section Styles{
    @Styles.Render("~/fonts/font-awesome-4.7.0/css/font-awesome.min.css")
    @Styles.Render("~/fonts/iconic/css/material-design-iconic-font.min.css")
    @Styles.Render("~/vendor/animate/animate.css")
    @Styles.Render("~/vendor/css-hamburgers/hamburgers.min.css")
    @Styles.Render("~/vendor/select2/select2.min.css")
    @Styles.Render("~/vendor/daterangepicker/daterangepicker.css")
    @Styles.Render("~/Content/login_main.css")
    @Styles.Render("~/Content/login_util.css")
}

@using (Html.BeginForm("Login", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div id="loginSection" style="display:block">
        <form class="login100-form validate-form">
            <span class="login100-form-title p-b-37">
                Inicio de sesión
            </span>

            <div class="wrap-input100 validate-input m-b-20" data-validate="Enter username or email">
                @Html.EditorFor(model => model.username, new
                {
                    htmlAttributes = new
                    {
                       @class = "input100",
                       @type = "text",
                       @name = "username",
                       @placeholder = "nombre de usuario"
                    }
                })
                <span class="focus-input100"></span>
            </div>

            <div class="wrap-input100 validate-input m-b-25" data-validate="Enter password">
                @Html.EditorFor(model => model.password, new
                {
                    htmlAttributes = new
                    {
                       @class = "input100",
                       @type = "password",
                       @name = "pass",
                       @placeholder = "contraseña"
                    }
                })
                <span class="focus-input100"></span>
            </div>

            <div id="alertMessage" style="color:red;display:none;">
                <strong>Error!</strong> Usuario y/o contraseña incorrectos.
            </div>

            <div id="alertMessage4" style="color:red;display:none;">
                <strong>Error!</strong> Cuenta no verificada
            </div>

            <br />
            <div class="container-login100-form-btn">
                <button type="submit" class="login100-form-btn">
                    Iniciar Sesión
                </button>
            </div>
            <br />
            <div class="text-center">
                <a id="signinLink" class="txt2 hov1" style="cursor:pointer">
                    Registrarse
                </a>
            </div>
        </form>
    </div>
}

@section Scripts{
    @Scripts.Render("~/vendor/animsition/js/animsition.min.js")
    @Scripts.Render("~/vendor/select2/select2.min.js")
    @Scripts.Render("~/vendor/daterangepicker/moment.min.js")
    @Scripts.Render("~/vendor/daterangepicker/daterangepicker.js")
    @Scripts.Render("~/vendor/countdowntime/countdowntime.js")
}
@{
    if (null != TempData["alertMessage"])
    {
        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script>
            $("#alertMessage").show();
        </script>
    }
    if (null != TempData["unverifiedAcc"])
    {
        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script>
            $("#alertMessage4").show();
        </script>
    }
}